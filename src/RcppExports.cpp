// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// ADMM_L2
List ADMM_L2(const Rcpp::NumericMatrix& s, double theta0, Rcpp::NumericVector& v, double rho, double lambda, std::string model, const Rcpp::NumericMatrix& Z_ini, const Rcpp::NumericMatrix& W_ini, double eps_thre, double eps_abs, double eps_rel, int max_iter, bool verbose);
RcppExport SEXP _SGM_ADMM_L2(SEXP sSEXP, SEXP theta0SEXP, SEXP vSEXP, SEXP rhoSEXP, SEXP lambdaSEXP, SEXP modelSEXP, SEXP Z_iniSEXP, SEXP W_iniSEXP, SEXP eps_threSEXP, SEXP eps_absSEXP, SEXP eps_relSEXP, SEXP max_iterSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type s(sSEXP);
    Rcpp::traits::input_parameter< double >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< std::string >::type model(modelSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type Z_ini(Z_iniSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type W_ini(W_iniSEXP);
    Rcpp::traits::input_parameter< double >::type eps_thre(eps_threSEXP);
    Rcpp::traits::input_parameter< double >::type eps_abs(eps_absSEXP);
    Rcpp::traits::input_parameter< double >::type eps_rel(eps_relSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(ADMM_L2(s, theta0, v, rho, lambda, model, Z_ini, W_ini, eps_thre, eps_abs, eps_rel, max_iter, verbose));
    return rcpp_result_gen;
END_RCPP
}
// ADMM_L2_Zero
List ADMM_L2_Zero(const Rcpp::NumericMatrix& SS, double theta0, Rcpp::NumericVector& v, double rho, const Rcpp::NumericMatrix AA, std::string model, const Rcpp::NumericMatrix& Z_ini, const Rcpp::NumericMatrix& W_ini, double eps_thre, double eps_abs, double eps_rel, int max_iter, bool verbose);
RcppExport SEXP _SGM_ADMM_L2_Zero(SEXP SSSEXP, SEXP theta0SEXP, SEXP vSEXP, SEXP rhoSEXP, SEXP AASEXP, SEXP modelSEXP, SEXP Z_iniSEXP, SEXP W_iniSEXP, SEXP eps_threSEXP, SEXP eps_absSEXP, SEXP eps_relSEXP, SEXP max_iterSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< double >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix >::type AA(AASEXP);
    Rcpp::traits::input_parameter< std::string >::type model(modelSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type Z_ini(Z_iniSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type W_ini(W_iniSEXP);
    Rcpp::traits::input_parameter< double >::type eps_thre(eps_threSEXP);
    Rcpp::traits::input_parameter< double >::type eps_abs(eps_absSEXP);
    Rcpp::traits::input_parameter< double >::type eps_rel(eps_relSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(ADMM_L2_Zero(SS, theta0, v, rho, AA, model, Z_ini, W_ini, eps_thre, eps_abs, eps_rel, max_iter, verbose));
    return rcpp_result_gen;
END_RCPP
}
// ADMM_L2_seq
List ADMM_L2_seq(const Rcpp::NumericMatrix& S, double theta0, Rcpp::NumericVector& v0, Rcpp::NumericVector& Rho, Rcpp::NumericVector& Lambda, std::string model, bool ini, double eps_thre, double eps_abs, double eps_rel, int max_iter, bool verbose);
RcppExport SEXP _SGM_ADMM_L2_seq(SEXP SSEXP, SEXP theta0SEXP, SEXP v0SEXP, SEXP RhoSEXP, SEXP LambdaSEXP, SEXP modelSEXP, SEXP iniSEXP, SEXP eps_threSEXP, SEXP eps_absSEXP, SEXP eps_relSEXP, SEXP max_iterSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type S(SSEXP);
    Rcpp::traits::input_parameter< double >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type v0(v0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type Rho(RhoSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type Lambda(LambdaSEXP);
    Rcpp::traits::input_parameter< std::string >::type model(modelSEXP);
    Rcpp::traits::input_parameter< bool >::type ini(iniSEXP);
    Rcpp::traits::input_parameter< double >::type eps_thre(eps_threSEXP);
    Rcpp::traits::input_parameter< double >::type eps_abs(eps_absSEXP);
    Rcpp::traits::input_parameter< double >::type eps_rel(eps_relSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(ADMM_L2_seq(S, theta0, v0, Rho, Lambda, model, ini, eps_thre, eps_abs, eps_rel, max_iter, verbose));
    return rcpp_result_gen;
END_RCPP
}
// ADMM_Lap
List ADMM_Lap(const Rcpp::NumericMatrix& SS, Rcpp::NumericVector& V0, double rho, double lambda, std::string model, const Rcpp::NumericMatrix& ZZ_ini, const Rcpp::NumericMatrix& WW_ini, double phi_ini, double eps_thre, double eps_abs, double eps_rel, int max_iter, int Z_max_iter, double Z_conv_abs, double Z_conv_rel, bool verbose);
RcppExport SEXP _SGM_ADMM_Lap(SEXP SSSEXP, SEXP V0SEXP, SEXP rhoSEXP, SEXP lambdaSEXP, SEXP modelSEXP, SEXP ZZ_iniSEXP, SEXP WW_iniSEXP, SEXP phi_iniSEXP, SEXP eps_threSEXP, SEXP eps_absSEXP, SEXP eps_relSEXP, SEXP max_iterSEXP, SEXP Z_max_iterSEXP, SEXP Z_conv_absSEXP, SEXP Z_conv_relSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type V0(V0SEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< std::string >::type model(modelSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type ZZ_ini(ZZ_iniSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type WW_ini(WW_iniSEXP);
    Rcpp::traits::input_parameter< double >::type phi_ini(phi_iniSEXP);
    Rcpp::traits::input_parameter< double >::type eps_thre(eps_threSEXP);
    Rcpp::traits::input_parameter< double >::type eps_abs(eps_absSEXP);
    Rcpp::traits::input_parameter< double >::type eps_rel(eps_relSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< int >::type Z_max_iter(Z_max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type Z_conv_abs(Z_conv_absSEXP);
    Rcpp::traits::input_parameter< double >::type Z_conv_rel(Z_conv_relSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(ADMM_Lap(SS, V0, rho, lambda, model, ZZ_ini, WW_ini, phi_ini, eps_thre, eps_abs, eps_rel, max_iter, Z_max_iter, Z_conv_abs, Z_conv_rel, verbose));
    return rcpp_result_gen;
END_RCPP
}
// ADMM_Lap_Zero
List ADMM_Lap_Zero(const Rcpp::NumericMatrix& SS, Rcpp::NumericVector& V0, double rho, const Rcpp::NumericMatrix& AA, std::string model, const Rcpp::NumericMatrix& ZZ_ini, const Rcpp::NumericMatrix& WW_ini, double phi_ini, double eps_thre, double eps_abs, double eps_rel, int max_iter, int Z_max_iter, double Z_conv_abs, double Z_conv_rel, bool verbose);
RcppExport SEXP _SGM_ADMM_Lap_Zero(SEXP SSSEXP, SEXP V0SEXP, SEXP rhoSEXP, SEXP AASEXP, SEXP modelSEXP, SEXP ZZ_iniSEXP, SEXP WW_iniSEXP, SEXP phi_iniSEXP, SEXP eps_threSEXP, SEXP eps_absSEXP, SEXP eps_relSEXP, SEXP max_iterSEXP, SEXP Z_max_iterSEXP, SEXP Z_conv_absSEXP, SEXP Z_conv_relSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type V0(V0SEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type AA(AASEXP);
    Rcpp::traits::input_parameter< std::string >::type model(modelSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type ZZ_ini(ZZ_iniSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type WW_ini(WW_iniSEXP);
    Rcpp::traits::input_parameter< double >::type phi_ini(phi_iniSEXP);
    Rcpp::traits::input_parameter< double >::type eps_thre(eps_threSEXP);
    Rcpp::traits::input_parameter< double >::type eps_abs(eps_absSEXP);
    Rcpp::traits::input_parameter< double >::type eps_rel(eps_relSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< int >::type Z_max_iter(Z_max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type Z_conv_abs(Z_conv_absSEXP);
    Rcpp::traits::input_parameter< double >::type Z_conv_rel(Z_conv_relSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(ADMM_Lap_Zero(SS, V0, rho, AA, model, ZZ_ini, WW_ini, phi_ini, eps_thre, eps_abs, eps_rel, max_iter, Z_max_iter, Z_conv_abs, Z_conv_rel, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SGM_ADMM_L2", (DL_FUNC) &_SGM_ADMM_L2, 13},
    {"_SGM_ADMM_L2_Zero", (DL_FUNC) &_SGM_ADMM_L2_Zero, 13},
    {"_SGM_ADMM_L2_seq", (DL_FUNC) &_SGM_ADMM_L2_seq, 12},
    {"_SGM_ADMM_Lap", (DL_FUNC) &_SGM_ADMM_Lap, 16},
    {"_SGM_ADMM_Lap_Zero", (DL_FUNC) &_SGM_ADMM_Lap_Zero, 16},
    {NULL, NULL, 0}
};

RcppExport void R_init_SGM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
